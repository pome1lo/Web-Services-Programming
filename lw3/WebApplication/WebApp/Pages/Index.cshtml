@page
@model IndexModel
@{
    ViewData["Title"] = "Список студентов";
}

<div class="container">
    <h2 class="my-4">Список студентов</h2>

    <!-- Кнопка для загрузки данных -->
    <div class="text-right mb-3">
        <button id="loadStudents" class="btn btn-primary">Загрузить список студентов</button>
    </div>

    <!-- Таблица для отображения данных -->
    <table class="table table-bordered table-hover">
        <thead class="thead-light">
            <tr>
                <th>ID</th>
                <th>Имя</th>
                <th>Телефон</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody id="studentsTable">
            <!-- Студенты будут динамически добавляться здесь -->
        </tbody>
    </table>
</div>

<script>
    document.getElementById("loadStudents").addEventListener("click", function () {
      

        // Отправляем GET-запрос к API с параметрами
        fetch(`http://localhost:5227/api/students?like=NAME&sort=ID&columns=Id,Name,Phone&globalike=NAME`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Ошибка HTTP: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                const studentsTable = document.getElementById("studentsTable");
                studentsTable.innerHTML = ""; // Очищаем таблицу

                // Проверяем, есть ли в ответе данные
                if (data.Students && data.Students.length > 0) {
                    data.Students.forEach(student => {
                        const row = document.createElement("tr");

                        row.innerHTML = `
                            <td>${student.id}</td>
                            <td>${student.name}</td>
                            <td>${student.phone}</td>
                            <td>
                                <button class="btn btn-warning btn-sm" onclick="editStudent(${student.id})">Редактировать</button>
                                <button class="btn btn-danger btn-sm" onclick="deleteStudent(${student.id})">Удалить</button>
                            </td>
                        `;

                        studentsTable.appendChild(row);
                    });
                } else {
                    // Если студентов нет, выводим сообщение
                    studentsTable.innerHTML = `<tr><td colspan="4" class="text-center">Нет данных</td></tr>`;
                }
            })
            .catch(error => {
                console.error("Ошибка при загрузке студентов:", error);
            });
    });


    function deleteStudent(id) {
        if (confirm("Вы уверены, что хотите удалить студента?")) {
            fetch(`/api/students/${id}`, {
                method: 'DELETE'
            })
            .then(response => {
                if (response.ok) {
                    alert("Студент удален.");
                    document.getElementById("loadStudents").click(); // Обновить список
                } else {
                    alert("Ошибка при удалении студента.");
                }
            });
        }
    }

    function editStudent(id) {
        // Логика для редактирования студента
        alert(`Редактировать студента с ID: ${id}`);
    }
</script>
